---
import Layout from "../../layouts/Layout.astro";
export async function getStaticPaths() {
  const response = await fetch(
    "http://192.168.2.126:8001/api/resource/Website%20Item?filters=[[%22published%22,%22=%22,1]]&fields=[%22web_item_name%22,%22name%22,%22custom_website_path%22]&limit_page_length=none"
  );
  const data = await response.json();

  const paths = data.data.map((productName) => ({
    params: { productquote: productName.custom_website_path },
  }));

  return paths;
}

const { productquote } = Astro.params;

const response = await fetch(
  `http://192.168.2.126:8001/api/resource/Website%20Item?filters=[]&fields=[%22item_name%22,%22custom_website_path%22]&limit_page_length=none`
);
const data = await response.json();
const select_products = data.data;
---

<Layout title="Quote">
  <body>
    <section id="heading">
      <div
        id="success-popup"
        class="fixed inset-0 flex items-center justify-center z-50 hidden"
      >
        <div class="absolute inset-0 bg-gray-800 opacity-50"></div>
        <div
          class="bg-white md:px-10 px-7 md:py-14 py-10 rounded-lg shadow-lg z-10 w-full sm:max-w-xl max-w-[90%] text-center relative"
        >
          <a
            id="closePopup"
            class="absolute top-4 right-4 text-gray-600 hover:text-gray-800 cursor-pointer text-2xl"
            role="button"
            aria-label="Close"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
            >
              <path fill="none" d="M0 0h24v24H0z"></path>
              <path
                d="M18 6L6 18"
                stroke="#E98135"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
              <path
                d="M6 6L18 18"
                stroke="#E98135"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
          </a>
          <p
            class="md:text-4xl ssm:text-3xl text-2xl font-semibold text-[#E98135]"
          >
            Thank You for Your Enquiry
          </p>
          <p class="text-gray-700 md:text-lg text-base mt-4 mb-5">
            We will get back to you as soon as possible.
          </p>
        </div>
      </div>
      <div
        class="bg-gradient-to-r from-[#242D4A] to-[#4B5EAA] text-[#FFFFFF] lg:h-[110px]"
      >
        <h2
          class="container-1 leading-[40px] md:text-[32px] text-[24px] font-[700] md:p-[30px] lg:pt-[40px] lg:pb-[30px] pt-[10px] pb-[10px]"
        >
          Get a Quote
        </h2>
      </div>
    </section>
  </body>
  <section class="2xl:h-[667px] h-auto">
    <div
      class="container-1 grid grid-cols-1 lg:grid-cols-2 lg:gap-[155px] xl:gap-[195px] pt-[77px] md:pb-[83px] pb-[43px]"
    >
      <div class="xl:w-[544px] lg:w-[484px] md:w-[424px] mx-auto lg:mx-0">
        <h5
          class="text-[#EA8135] font-bold xl:text-[20px] md:text-[18px] text-[14px] xl:leading-[24px] md:leading-[20px] leading-[16px]"
        >
          Fill the form below
        </h5>
        <h2
          class="mt-[3px] uppercase xl:text-[32px] font-bold xl:leading-[40px] md:text-[22px] md:leading-[24px] text-[16px] leading-[inherit] text-[#48389C] max-w-[523px]"
        >
          we will reply with custom quote for your needs.
        </h2>
        <form
          method="post"
          class="group xl:w-[544px] lg:w-[484px] md:w-[424px] mt-[31px]"
          novalidate
          id="enquiry-form"
        >
          <div
            class="flex flex-wrap md:gap-[26px] gap-[18px] md:mb-[24px] mb-[18px]"
          >
            <div class="w-full xl:w-[259px] lg:w-[209px] h-full md:h-[45px]">
              <label for="firstname">
                <input
                  class="appearance-none block w-full text-[black] border-[1px] border-[#D9D9D9] rounded px-[14px] py-[10px] leading-tight focus:outline-none"
                  id="grid-first-name"
                  type="text"
                  placeholder="First Name*"
                  name="first_name"
                />
                <span
                  id="firstname_valid"
                  class="text-[red] px-1 text-[14px] hidden"
                  >Enter a valid first name</span
                >
              </label>
            </div>
            <div class="w-full xl:w-[259px] lg:w-[209px] h-full md:h-[45px]">
              <label for="lastname">
                <input
                  class="appearance-none block w-full text-[black] border-[1px] border-[#D9D9D9] rounded px-[14px] py-[10px] leading-tight focus:outline-none focus:bg-white"
                  id="grid-last-name"
                  type="text"
                  placeholder="Last Name*"
                  name="last_name"
                />
                <span
                  id="lastname_valid"
                  class="text-[red] px-1 text-[14px] hidden"
                  >Enter a valid last name</span
                >
              </label>
            </div>
          </div>
          <div
            class="flex flex-wrap md:gap-[26px] gap-[18px] md:mb-[24px] mb-[18px]"
          >
            <div class="xl:w-[544px] lg:w-[444px] w-full md:h-[45px] h-full">
              <label for="Email">
                <input
                  class="appearance-none block w-full text-[black] border-[1px] border-[#D9D9D9] rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white"
                  id="grid-email"
                  type="text"
                  placeholder="Email*"
                  name="email"
                />
                <span
                  id="email_valid"
                  class="text-[red] px-1 text-[14px] hidden"
                  >Enter a Valid Email</span
                >
              </label>
            </div>
          </div>
          <div
            class="flex flex-wrap md:gap-[26px] gap-[18px] md:mb-[24px] mb-[18px]"
          >
            <div class="w-full xl:w-[164px] lg:w-[104px] h-full md:h-[45px]">
              <div class="relative">
                <select
                  class="block appearance-none w-full bg-[white] text-[black] border-[1px] border-[#D9D9D9] px-[14px] py-[10px] rounded leading-tight focus:outline-none focus:bg-white"
                  name="country"
                  id="grid-country"
                >
                  <option value="376">Andorra (+376)</option>
                  <option value="213">Algeria (+213)</option>
                  <option value="244">Angola (+244)</option>
                  <option value="1264">Anguilla (+1264)</option>
                  <option value="1268">Antigua &amp; Barbuda (+1268)</option>
                  <option value="54">Argentina (+54)</option>
                  <option value="374">Armenia (+374)</option>
                  <option value="297">Aruba (+297)</option>
                  <option value="61">Australia (+61)</option>
                  <option value="43">Austria (+43)</option>
                  <option value="994">Azerbaijan (+994)</option>
                  <option value="1242">Bahamas (+1242)</option>
                  <option value="973">Bahrain (+973)</option>
                  <option value="880">Bangladesh (+880)</option>
                  <option value="1246">Barbados (+1246)</option>
                  <option value="375">Belarus (+375)</option>
                  <option value="32">Belgium (+32)</option>
                  <option value="501">Belize (+501)</option>
                  <option value="229">Benin (+229)</option>
                  <option value="1441">Bermuda (+1441)</option>
                  <option value="975">Bhutan (+975)</option>
                  <option value="591">Bolivia (+591)</option>
                  <option value="387">Bosnia Herzegovina (+387)</option>
                  <option value="267">Botswana (+267)</option>
                  <option value="55">Brazil (+55)</option>
                  <option value="673">Brunei (+673)</option>
                  <option value="359">Bulgaria (+359)</option>
                  <option value="226">Burkina Faso (+226)</option>
                  <option value="257">Burundi (+257)</option>
                  <option value="855">Cambodia (+855)</option>
                  <option value="237">Cameroon (+237)</option>
                  <option value="1">Canada (+1)</option>
                  <option value="238">Cape Verde Islands (+238)</option>
                  <option value="1345">Cayman Islands (+1345)</option>
                  <option value="236">Central African Republic (+236)</option>
                  <option value="56">Chile (+56)</option>
                  <option value="86">China (+86)</option>
                  <option value="57">Colombia (+57)</option>
                  <option value="269">Comoros (+269)</option>
                  <option value="242">Congo (+242)</option>
                  <option value="682">Cook Islands (+682)</option>
                  <option value="506">Costa Rica (+506)</option>
                  <option value="385">Croatia (+385)</option>
                  <option value="53">Cuba (+53)</option>
                  <option value="90392">Cyprus North (+90392)</option>
                  <option value="357">Cyprus South (+357)</option>
                  <option value="42">Czech Republic (+42)</option>
                  <option value="45">Denmark (+45)</option>
                  <option value="253">Djibouti (+253)</option>
                  <option value="1809">Dominica (+1809)</option>
                  <option value="1809">Dominican Republic (+1809)</option>
                  <option value="593">Ecuador (+593)</option>
                  <option value="20">Egypt (+20)</option>
                  <option value="503">El Salvador (+503)</option>
                  <option value="240">Equatorial Guinea (+240)</option>
                  <option value="291">Eritrea (+291)</option>
                  <option value="372">Estonia (+372)</option>
                  <option value="251">Ethiopia (+251)</option>
                  <option value="500">Falkland Islands (+500)</option>
                  <option value="298">Faroe Islands (+298)</option>
                  <option value="679">Fiji (+679)</option>
                  <option value="358">Finland (+358)</option>
                  <option value="33">France (+33)</option>
                  <option value="594">French Guiana (+594)</option>
                  <option value="689">French Polynesia (+689)</option>
                  <option value="241">Gabon (+241)</option>
                  <option value="220">Gambia (+220)</option>
                  <option value="7880">Georgia (+7880)</option>
                  <option value="49">Germany (+49)</option>
                  <option value="233">Ghana (+233)</option>
                  <option value="350">Gibraltar (+350)</option>
                  <option value="30">Greece (+30)</option>
                  <option value="299">Greenland (+299)</option>
                  <option value="1473">Grenada (+1473)</option>
                  <option value="590">Guadeloupe (+590)</option>
                  <option value="671">Guam (+671)</option>
                  <option value="502">Guatemala (+502)</option>
                  <option value="224">Guinea (+224)</option>
                  <option value="245">Guinea - Bissau (+245)</option>
                  <option value="592">Guyana (+592)</option>
                  <option value="509">Haiti (+509)</option>
                  <option value="504">Honduras (+504)</option>
                  <option value="852">Hong Kong (+852)</option>
                  <option value="36">Hungary (+36)</option>
                  <option value="354">Iceland (+354)</option>
                  <option value="91" selected>India (+91)</option>
                  <option value="62">Indonesia (+62)</option>
                  <option value="98">Iran (+98)</option>
                  <option value="964">Iraq (+964)</option>
                  <option value="353">Ireland (+353)</option>
                  <option value="972">Israel (+972)</option>
                  <option value="39">Italy (+39)</option>
                  <option value="1876">Jamaica (+1876)</option>
                  <option value="81">Japan (+81)</option>
                  <option value="962">Jordan (+962)</option>
                  <option value="7">Kazakhstan (+7)</option>
                  <option value="254">Kenya (+254)</option>
                  <option value="686">Kiribati (+686)</option>
                  <option value="850">Korea North (+850)</option>
                  <option value="82">Korea South (+82)</option>
                  <option value="965">Kuwait (+965)</option>
                  <option value="996">Kyrgyzstan (+996)</option>
                  <option value="856">Laos (+856)</option>
                  <option value="371">Latvia (+371)</option>
                  <option value="961">Lebanon (+961)</option>
                  <option value="266">Lesotho (+266)</option>
                  <option value="231">Liberia (+231)</option>
                  <option value="218">Libya (+218)</option>
                  <option value="417">Liechtenstein (+417)</option>
                  <option value="370">Lithuania (+370)</option>
                  <option value="352">Luxembourg (+352)</option>
                  <option value="853">Macao (+853)</option>
                  <option value="389">Macedonia (+389)</option>
                  <option value="261">Madagascar (+261)</option>
                  <option value="265">Malawi (+265)</option>
                  <option value="60">Malaysia (+60)</option>
                  <option value="960">Maldives (+960)</option>
                  <option value="223">Mali (+223)</option>
                  <option value="356">Malta (+356)</option>
                  <option value="692">Marshall Islands (+692)</option>
                  <option value="596">Martinique (+596)</option>
                  <option value="222">Mauritania (+222)</option>
                  <option value="269">Mayotte (+269)</option>
                  <option value="52">Mexico (+52)</option>
                  <option value="691">Micronesia (+691)</option>
                  <option value="373">Moldova (+373)</option>
                  <option value="377">Monaco (+377)</option>
                  <option value="976">Mongolia (+976)</option>
                  <option value="1664">Montserrat (+1664)</option>
                  <option value="212">Morocco (+212)</option>
                  <option value="258">Mozambique (+258)</option>
                  <option value="95">Myanmar (+95)</option>
                  <option value="264">Namibia (+264)</option>
                  <option value="674">Nauru (+674)</option>
                  <option value="977">Nepal (+977)</option>
                  <option value="31">Netherlands (+31)</option>
                  <option value="687">New Caledonia (+687)</option>
                  <option value="64">New Zealand (+64)</option>
                  <option value="505">Nicaragua (+505)</option>
                  <option value="227">Niger (+227)</option>
                  <option value="234">Nigeria (+234)</option>
                  <option value="683">Niue (+683)</option>
                  <option value="672">Norfolk Islands (+672)</option>
                  <option value="670">Northern Marianas (+670)</option>
                  <option value="47">Norway (+47)</option>
                  <option value="968">Oman (+968)</option>
                  <option value="680">Palau (+680)</option>
                  <option value="507">Panama (+507)</option>
                  <option value="675">Papua New Guinea (+675)</option>
                  <option value="595">Paraguay (+595)</option>
                  <option value="51">Peru (+51)</option>
                  <option value="63">Philippines (+63)</option>
                  <option value="48">Poland (+48)</option>
                  <option value="351">Portugal (+351)</option>
                  <option value="1787">Puerto Rico (+1787)</option>
                  <option value="974">Qatar (+974)</option>
                  <option value="262">Reunion (+262)</option>
                  <option value="40">Romania (+40)</option>
                  <option value="7">Russia (+7)</option>
                  <option value="250">Rwanda (+250)</option>
                  <option value="378">San Marino (+378)</option>
                  <option value="239"
                    >Sao
                    Tohttps://sanskar.frappe.cloud/project?name=Migoo%20Equipment%20Portal
                    Arabia (+966)</option
                  >
                  <option value="221">Senegal (+221)</option>
                  <option value="381">Serbia (+381)</option>
                  <option value="248">Seychelles (+248)</option>
                  <option value="232">Sierra Leone (+232)</option>
                  <option value="65">Singapore (+65)</option>
                  <option value="421">Slovak Republic (+421)</option>
                  <option value="386">Slovenia (+386)</option>
                  <option value="677">Solomon Islands (+677)</option>
                  <option value="252">Somalia (+252)</option>
                  <option value="27">South Africa (+27)</option>
                  <option value="34">Spain (+34)</option>
                  <option value="94">Sri Lanka (+94)</option>
                  <option value="290">St. Helena (+290)</option>
                  <option value="1869">St. Kitts (+1869)</option>
                  <option value="1758">St. Lucia (+1758)</option>
                  <option value="249">Sudan (+249)</option>
                  <option value="597">Suriname (+597)</option>
                  <option value="268">Swaziland (+268)</option>
                  <option value="46">Sweden (+46)</option>
                  <option value="41">Switzerland (+41)</option>
                  <option value="963">Syria (+963)</option>
                  <option value="886">Taiwan (+886)</option>
                  <option value="7">Tajikstan (+7)</option>
                  <option value="66">Thailand (+66)</option>
                  <option value="228">Togo (+228)</option>
                  <option value="676">Tonga (+676)</option>
                  <option value="1868">Trinidad &amp; Tobago (+1868)</option>
                  <option value="216">Tunisia (+216)</option>
                  <option value="90">Turkey (+90)</option>
                  <option value="7">Turkmenistan (+7)</option>
                  <option value="993">Turkmenistan (+993)</option>
                  <option value="1649"
                    >Turks &amp; Caicos Islands (+1649)</option
                  >
                  <option value="688">Tuvalu (+688)</option>
                  <option value="256">Uganda (+256)</option>
                  <option value="44">UK (+44)</option>
                  <option value="380">Ukraine (+380)</option>
                  <option value="971">United Arab Emirates (+971)</option>
                  <option value="598">Uruguay (+598)</option>
                  <option value="1">USA (+1)</option>
                  <option value="7">Uzbekistan (+7)</option>
                  <option value="678">Vanuatu (+678)</option>
                  <option value="379">Vatican City (+379)</option>
                  <option value="58">Venezuela (+58)</option>
                  <option value="84">Vietnam (+84)</option>
                  <option value="84">Virgin Islands - British (+1284)</option>
                  <option value="84">Virgin Islands - US (+1340)</option>
                  <option value="681">Wallis &amp; Futuna (+681)</option>
                  <option value="969">Yemen (North)(+969)</option>
                  <option value="967">Yemen (South)(+967)</option>
                  <option value="260">Zambia (+260)</option>
                  <option value="263">Zimbabwe (+263)</option>
                </select>
              </div>
            </div>
            <div class="w-full xl:w-[354px] lg:w-[314px] h-full md:h-[45px]">
              <label for="Contact">
                <input
                  class="appearance-none block w-full text-[black] border-[1px] border-[#D9D9D9] rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white"
                  id="grid-number"
                  type="text"
                  placeholder="Phone. No.*"
                  name="phone_no"
                />
                <span
                  id="phone_number_valid"
                  class="text-[red] p-1 text-[14px] hidden"
                  >Enter a 10 digit number</span
                >
              </label>
            </div>
          </div>
          <div class="flex flex-wrap md:mb-[24px] mb-[18px]">
            <div class="w-full xl:w-[544px] lg:w-[444px] h-full md:h-[45px]">
              <input
                class="appearance-none block w-full text-[black] border-[1px] border-[#D9D9D9] rounded px-[14px] py-[10px] leading-tight focus:outline-none focus:bg-white"
                id="grid-delivery"
                type="text"
                placeholder="Delivery Location"
                name="delivery_location"
              />
            </div>
          </div>
          <div
            class="flex flex-wrap md:gap-[26px] gap-[18px] md:mb-[24px] mb-[18px]"
          >
            <div class="w-full xl:w-[259px] lg:w-[209px] h-full md:h-[45px]">
              <div class="relative">
                <select
                  id="products_select"
                  class="block appearance-none w-full bg-[white] text-[black] border-[1px] border-[#D9D9D9] py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white"
                  name="product"
                  id="grid-product"
                >
                  {
                    select_products.map((data) => (
                      <option selected={data.custom_website_path === productquote}>
                        {data.item_name}
                      </option>
                    ))
                  }
                </select>
              </div>
            </div>
            <div class="w-full xl:w-[259px] lg:w-[209px] h-full md:h-[45px]">
              <input
                class="appearance-none block w-full text-[black] border-[1px] border-[#D9D9D9] rounded px-[14px] py-[10px] leading-tight focus:outline-none focus:bg-white"
                id="grid-number"
                type="text"
                name="quantity"
                placeholder="Quantity"
              />
            </div>
          </div>
          <!-- <button>Submit form</button> -->
          <button
            id="submit-btn"
            type="submit"
            class="btn-6 z-10 mt-6 md:text-base text-xl flex gap-4 pt-[11px] pb-[9px] pl-[30px] md:pl-[19px] items-center bg-[#E98135] rounded-[5px] h-[44px] md:w-[115px] w-[150px] text-white uppercase"
          >
            <span></span>
            Submit
            <img src="../../public/images/index/right_arrow.webp" alt=">" />
          </button>
        </form>
      </div>
      <div
        class="lg:order-last order-first flex items-center xl:items-start mb-[20px] lg:mb-0 2xl:mt-[37px]"
      >
        <img
          src="../../public/images/quote/drums.webp"
          alt="products"
          class="lg:w-[95%] md:w-[65%] w-[80%] mx-auto lg:mx-0"
        />
      </div>
    </div>
  </section>

  <script>
    //validation for form
    const firstName = document.getElementById(
      "grid-first-name"
    ) as HTMLInputElement;
    const lastName = document.getElementById(
      "grid-last-name"
    ) as HTMLInputElement;
    const email = document.getElementById("grid-email") as HTMLInputElement;
    const Phone_Number = document.getElementById(
      "grid-number"
    ) as HTMLInputElement;

    let firstNameMsg = document.getElementById("firstname_valid");
    let lastNameMsg = document.getElementById("lastname_valid");
    let emailMsg = document.getElementById("email_valid");
    let phoneNumberMsg = document.getElementById("phone_number_valid");

    const nameRegex =
      /^(?=(?:[^A-Za-z]*[A-Za-z]){2})(?![^\d~`?!^*¨ˆ;@=$%{}\[\]|\\\/<>#“.,]*[\d~`?!^*¨ˆ;@=$%{}\[\]|\\\/<>#“.,])\S+(?: \S+){0,2}$/;
    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
    const numberRegex = /^\d{10}$/;

    let isFirstNameValid = false;
    let isLastNameValid = false;
    let isEmailValid = false;
    let isPhoneValid = false;
    let isValid = false;

    firstName.addEventListener("input", () => {
      // console.log(firstName.value)
      if (nameRegex.test(firstName.value.trim())) {
        firstNameMsg.classList.add("hidden");
      } else {
        firstNameMsg.classList.remove("hidden");
      }
    });

    lastName.addEventListener("input", () => {
      // console.log(lastName.value)
      if (nameRegex.test(lastName.value.trim())) {
        lastNameMsg.classList.add("hidden");
      } else {
        lastNameMsg.classList.remove("hidden");
      }
    });

    email.addEventListener("input", () => {
      // console.log(email.value)
      if (emailRegex.test(email.value.trim())) {
        emailMsg.classList.add("hidden");
      } else {
        emailMsg.classList.remove("hidden");
      }
    });

    Phone_Number.addEventListener("input", () => {
      // console.log(Phone_Number.value)
      if (numberRegex.test(Phone_Number.value.trim())) {
        phoneNumberMsg.classList.add("hidden");
      } else {
        phoneNumberMsg.classList.remove("hidden");
      }
    });

    function handleInput() {
      // Values from dom elements ( input )
      let firstNameValue = firstName.value.trim();
      let lastNameValue = lastName.value.trim();
      let emailValue = email.value.trim();
      let phonenumberValue = Phone_Number.value.trim();

      //  Checking for username
      if (nameRegex.test(firstNameValue)) {
        // console.log("Success")
        firstNameMsg.classList.add("hidden");
        isFirstNameValid = true;
      } else {
        // console.log(("Error"))
        firstNameMsg.classList.remove("hidden");
        isFirstNameValid = false;
      }

      // for last name
      if (nameRegex.test(lastNameValue)) {
        // console.log("Success")
        lastNameMsg.classList.add("hidden");
        isLastNameValid = true;
      } else {
        // console.log(("Error"))
        lastNameMsg.classList.remove("hidden");
        isLastNameValid = false;
      }

      // Checking for email
      if (emailRegex.test(emailValue)) {
        // console.log("Success")
        emailMsg.classList.add("hidden");
        isEmailValid = true;
      } else {
        // console.log(("Error"))
        emailMsg.classList.remove("hidden");
        isEmailValid = false;
      }

      // For Phone number value
      if (numberRegex.test(phonenumberValue)) {
        // console.log("Success")
        phoneNumberMsg.classList.add("hidden");
        isPhoneValid = true;
      } else {
        // console.log(("Error"))
        phoneNumberMsg.classList.remove("hidden");
        isPhoneValid = false;
      }
      if (isFirstNameValid && isLastNameValid && isEmailValid && isPhoneValid) {
        isValid = true;
      }
      return isValid;
    }

    const apiKey = import.meta.env.PUBLIC_ApiKey as string;
    const secretKey = import.meta.env.PUBLIC_SecretKey as string;

    // const urlParams = new URLSearchParams(window.location.search);
    // const website_path = urlParams.get("product");

    // // const website_path = "vg-10-bulk";

    // const get_id_API = await fetch(
    //   `http://192.168.2.126:8001/api/resource/Website%20Item?filters=[[%22custom_website_path%22,%22=%22,%22${website_path}%22]]&fields=[%22name%22]`,
    //   {
    //     method: "GET",
    //     headers: {
    //       Authorization: `token ${apiKey}:${secretKey}`,
    //     },
    //   }
    // );

    // const get_id_data = await get_id_API.json();
    // const get_id = get_id_data.data;
    // const id = get_id[0].name;
    // console.log(get_id);

    // const allProductsJson = await fetch(
    //   `http://192.168.2.126:8001/api/resource/Website%20Item?filters=[[%22published%22,%22=%22,1]]&fields=[%22web_item_name%22,%22name%22]&limit_page_length=100`,

    //   {
    //     method: "GET",
    //     headers: {
    //       Authorization: `token ${apiKey}:${secretKey}`,
    //     },
    //   }
    // );

    // const allProductsJsonData = await allProductsJson.json();
    // console.log(allProductsJsonData);
    // const allProductData = allProductsJsonData.data;
    // console.log(allProductData);

    // const products_select = document.getElementById(
    //   "products_select"
    // ) as HTMLSelectElement;

    // allProductData.forEach((data) => {
    //   // console.log(data.web_item_name)
    //   const option = document.createElement("option");
    //   option.innerText = data.web_item_name;
    //   option.value = data.web_item_name;
    //   products_select.appendChild(option);
    // });

    // allProductData.forEach((data) => {
    //   if (id == data.name) {
    //     // console.log(data.web_item_name);

    //     for (const option of products_select.options) {
    //       // console.log(products_select.options);
    //       // console.log(option.value);
    //       // Check if the option's value matches the value to select
    //       if (option.value == data.web_item_name) {
    //         // Set the selected property to true for the matching option
    //         // console.log(option.value);
    //         option.selected = true;
    //         // Exit the loop since the option is found
    //       }
    //     }
    //   }
    // });

    document.querySelector("form").addEventListener("submit", async (event) => {
      event.preventDefault(); // Prevent the form from submitting
      const validationForm = handleInput();
      if (validationForm) {
        // Extract form data
        const formData = new FormData(event.target as HTMLFormElement);

        // Create an object to store the form data
        const formDataObject = {};
        formData.forEach((value, key) => {
          formDataObject[key] = value;
        });
        formDataObject["source"] = "Quote";
        // console.log(formDataObject);

        // Send the POST request to the Frappe endpoint
        await sendDataToFrappDoctype(formDataObject);
      }
    });

    async function sendDataToFrappDoctype(formData) {
      try {
        const endpoint = `http://192.168.2.126:8001/api/resource/Website%20Enquiry`;

        const authToken = `token ${apiKey}:${secretKey}`;

        const response = await fetch(endpoint, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `token ${apiKey}:${secretKey}`,
          },
          body: JSON.stringify(formData),
        });
        const successPopup = document.getElementById("success-popup");

        // Add this code after showing the pop-up message in the `sendDataToFrappDoctype` function
        setTimeout(() => {
          successPopup.classList.add("hidden"); // Hide the pop-up message
          (document.getElementById("enquiry-form") as HTMLFormElement).reset(); // Reset the form
        }, 3000); // 3000 milliseconds (3 seconds)

        if (response.status === 200) {
          // Show the pop-up message
          successPopup.classList.remove("hidden");
          // console.log("Document created successfully.");
        } else {
          console.error("Failed to create document.");
        }
      } catch (error) {
        console.error("Error:", error);
      }
    }
  </script>

  <!-- button hover script  -->
  <script src="../../../public/js/button_hover.js"></script>

  <!-- Thank you  popup css -->
  <style>
    / Custom CSS for success pop-up / #success-popup {
      animation: fadeIn 0.5s ease-out;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
  </style>
</Layout>
