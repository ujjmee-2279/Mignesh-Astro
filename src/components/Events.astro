---
interface Props {
  orange_heading?: string;
  purple_heading?: string;
  text_para?: string;
  slider_1?: string;
  slider_2?: string;
  slider_3?: string;
  logo_src?: string;
  image_caption?: string;
  noslide?: boolean;
  slider_caption?: boolean;
}
const {
  orange_heading,
  purple_heading,
  text_para,
  slider_1,
  slider_2,
  slider_3,
  logo_src,
  image_caption,
  noslide,
  slider_caption,
} = Astro.props;
---

<!-- Csr Slider Flowbite Tailwind  -->
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js"
></script>

<!-- class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-28 mt-6 lg:mt-9 lg:mb-20 mb-auto" -->
<div
  class="flex flex-col xl:flex-row justify-between mt-3 xl:mt-9 xl:mb-20 mb-auto text-[#2C2C2C] gap-[.5rem] xl:gap-0"
>
  <div class="Iteam-1 xl:w-[50%] xl:max-w-[520px] xl:pl-5">
    <div class="flex gap-[.5rem] xl:gap-[23.04px] flex-col xl:flex-row">
      <div class="logo xl:w-[150%] 2xl:w-full mt-4 xl:mt-0">
        <img
          class="w-[15%] sm:w-[10%] lg:w-[12%] xl:w-[150%] 2xl:w-full"
          src={logo_src}
          alt="image"
        />
      </div>
      <div class="text">
        <div class="xl:mt-5 text-[18px]">
          <h3 class="text-[#E98135] font-bold">{orange_heading}</h3>
          <h3 class="text-[#48389C] font-bold">{purple_heading}</h3>
        </div>
        <div>
          <p class="xl:pt-[10px] pt-2 text-[16px]">
            {text_para}
          </p>
        </div>
      </div>
    </div>
  </div>
  <div
    id="controls-carousel"
    class="relative xl:order-2 xl:w-auto"
    data-carousel="static"
  >
    <!-- Carousel wrapper -->
    <div
      class="overflow-hidden relative aspect-[113/70] xl:h-80 2xl:h-[420px] transition-transform duration-900 ease-in-out"
    >
      <!-- Item 1 -->

      <!-- <div class="hidden duration-700 ease-in-out" data-carousel-item> -->

      <div class="hidden" data-carousel-item="active">
        <img
          src={slider_1}
          class="relative block h-full w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 object-cover"
          alt="image"
        />

        {
          slider_caption && (
        <div
          class="absolute bottom-0 xl:-bottom-1 2xl:bottom-0 z-50 lg:z-50 h-[55px] bg-white bg-opacity-80 w-full"
        >
          <p
            class="ssm:text-[16px] px-2 sm:px-[19px] sm:py-[16px] ssm:py-[10px] lg:py-2 xl:py-4"
          >
            {image_caption}
          </p>
        </div>
          )
        }
      </div>
      <!-- Item 2 -->
      <!-- <div class="hidden duration-700 ease-in-out" data-carousel-item="active"> -->
      <div class="hidden" data-carousel-item>
        <img
          src={slider_2}
          class="relative block h-full w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 object-cover"
          alt="image"
        />
        {
          slider_caption && (
        <div
          class="absolute bottom-0 xl:-bottom-1 2xl:bottom-0 z-50 lg:z-50 h-[55px] bg-white bg-opacity-80 w-full"
        >
          <p
            class="ssm:text-[16px] px-2 sm:px-[19px] lg:py-2 xl:py-4 sm:py-[16px] ssm:py-[10px]"
          >
            {image_caption}
          </p>
        </div>
          )
        }

      </div>
      <!-- Item 3 -->
      <!-- <div class="hidden duration-700 ease-in-out" data-carousel-item> -->
      <div class="hidden" data-carousel-item>
        <img
          src={slider_3}
          class="relative block h-full w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 object-cover"
          alt="image"
        />
        {
          slider_caption && (
        <div
          class="absolute bottom-0 xl:-bottom-1 2xl:bottom-0 z-50 lg:z-50 h-[55px] bg-white bg-opacity-80 w-full"
        >
          <p
            class="ssm:text-[16px] px-2 sm:px-[19px] sm:py-[16px] ssm:py-[10px] lg:py-2 xl:py-4"
          >
            {image_caption}
          </p>
        </div>
          )
        }
      </div>
    </div>

    <!-- Slider controls -->
    {
      !noslide && (
        <>
          <button
            type="button"
            class="absolute top-0 lg:-top-[40px] xl:top-0 left-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
            data-carousel-prev
          >
            <span class="inline-flex items-center justify-center ml-[20px] w-[24px] h-[24px] rounded-full bg-[#E98237] group-hover:bg-[#AF642D] group-focus:ring-4 group-focus:ring-[#bd5e1e] group-focus:outline-none">
              <svg
                class="w-[8px] h-[12px] text-white"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 6 10"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 1 1 5l4 4"
                />
              </svg>
              <span class="sr-only">Previous</span>
            </span>
          </button>
          <button
            type="button"
            id="carousel-next-button"
            class="carousel-next-button absolute top-0 lg:-top-[40px] xl:top-0 right-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
            data-carousel-next
          >
            <span class="inline-flex items-center justify-center mr-[20px]  2xl:mr-[23px] w-[24px] h-[24px] rounded-full bg-[#E98237] group-hover:bg-[#AF642D] group-focus:ring-4 group-focus:ring-[#bd5e1e] group-focus:outline-none">
              <svg
                class="w-[8px] h-[12px] text-white"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 6 10"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="m1 9 4-4-4-4"
                />
              </svg>
              <span class="sr-only">Next</span>
            </span>
          </button>
        </>
      )
    }
  </div>
</div>

<!-- 
<script>
  let timer;
  function autoSlide() {
    const nextButton = document.getElementById("carousel-next-button");
    nextButton.click();
  }

  timer = setInterval(autoSlide, 5000);

  const nextButton = document.getElementById("carousel-next-button");
  nextButton.addEventListener("click", () => {
    clearInterval(timer);
    timer = setInterval(autoSlide, 5000);
  });
</script> -->

<!-- <script>
  // Function to slide the carousel automatically
  function autoSlide(Events) {
    const nextButton = Events.querySelector("[data-carousel-next]");
    nextButton.click(); // Simulate a click on the "Next" button
  }

  // Start the auto-slide timer for each component
  const carouselComponents = document.querySelectorAll(
    "[data-carousel-component]"
  );
  carouselComponents.forEach((Events) => {
    let timer;

    function startTimer() {
      timer = setInterval(() => autoSlide(Events), 5000); // 5000 milliseconds = 5 seconds
    }

    // Event listener for clicking the "Next" button within each component
    const nextButton = Events.querySelector("[data-carousel-next]");
    nextButton.addEventListener("click", () => {
      clearInterval(timer); // Clear the timer for this component
      startTimer(); // Restart the timer for this component
    });

    // Start the timer initially
    startTimer();
  });
</script> -->
